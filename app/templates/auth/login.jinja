<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/login.css') }}">
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('login-form');
            const emailInput = document.getElementById('UserName');
            const passwordInput = document.getElementById('UserPassword');
            const alertContainer = document.getElementById('alert-container');
    
            form.addEventListener('submit', async function(event) {
                // Limpiar mensajes de alerta
                alertContainer.innerHTML = '';
    
                // Validar campos vacíos
                let errors = [];
                if (!emailInput.value.trim()) {
                    errors.push('El campo de usuario es obligatorio.');
                } else if (!validateEmail(emailInput.value.trim())) {
                    errors.push('Por favor, ingrese un correo electrónico válido.');
                } else {
                    // Validar si el correo existe antes de enviar
                    const emailExists = await checkEmailExists(emailInput.value.trim());
                    if (!emailExists) {
                        errors.push('El correo no está registrado.');
                    }
                }
    
                if (!passwordInput.value.trim()) {
                    errors.push('El campo de contraseña es obligatorio.');
                }
    
                // Si hay errores, prevenir envío y mostrar mensajes
                if (errors.length > 0) {
                    event.preventDefault();
                    errors.forEach(error => {
                        const alert = document.createElement('div');
                        alert.className = 'alert alert-danger';
                        alert.textContent = error;
                        alertContainer.appendChild(alert);
                    });
                }
            });
    
            // Función para validar formato de correo
            function validateEmail(email) {
                const re = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
                return re.test(email);
            }
    
            // Función para verificar si el correo existe usando el endpoint
            async function checkEmailExists(email) {
                const response = await fetch('/auth/check-email', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email })
                });
    
                // Verificar si el servidor responde correctamente
                if (response.ok) {
                    const data = await response.json();
                    return data.exists;
                }
    
                // Si la respuesta no es correcta, simplemente retorna falso
                return false;
            }
        });
    </script>
    
</head>
<body>
    <div class="login-container">
        <div class="avatar">
            <img src="{{ url_for('static', filename='assets/avatar/iniciar-sesion.png') }}" alt="Avatar">
        </div>
        <h2>Iniciar sesión</h2>

        <!-- Contenedor para mensajes de error -->
        <div id="alert-container">
            {% with messages = get_flashed_messages(with_categories=True) %}
                {% if messages %}
                    {% for category, message in messages %}
                        <div class="alert alert-{{ category }}">
                            {{ message }}
                        </div>
                    {% endfor %}
                {% endif %}
            {% endwith %}
        </div>

        <!-- Formulario de login -->
        <form id="login-form" action="{{ url_for('auth.login') }}" method="POST" autocomplete="off">
            <div class="form-group">
                <label for="UserName">Usuario</label>
                <input type="text" id="UserName" name="username" placeholder="Email o nombre de usuario" autocomplete="off">
            </div>
            <div class="form-group">
                <label for="UserPassword">Contraseña</label>
                <input type="password" id="UserPassword" name="password" placeholder="Contraseña" autocomplete="new-password">
            </div>
            <button type="submit" class="btn-login">Iniciar Sesión</button>
        </form>

        <p>¿No tienes una cuenta? <a href="{{ url_for('auth.register') }}">Crear cuenta</a></p>
    </div>
</body>
</html>
